- cache answer do 
  li.answer id="answer-#{answer.id}"
    = "Author: #{answer.author.email}" 
    br
    = answer.body
    br
    p
      ul.answer-links
        - answer.links.each do |link|
          -if link.gist?
            li.gist-link
              = javascript_include_tag link.url+".js"
          -else
            li
              = link_to link.name, url_for(link.url), target: "_blank"
    br
    - if answer.files.attached?
      - if current_user&.author?(answer)
        - answer.files.each do |file|
          p id="attachment-id-#{file.id}"
            = link_to file.filename.to_s, url_for(file)
            = link_to 'Delete attachment', answer_attachment_path(answer, file), method: :delete, remote: true
    br
    p.rating
      = "Rating: #{answer.rating.rating}"
      p.rating-message
    br
    - if can? :vote, answer.rating
      = link_to "#{ answer.rating.voted?(current_user,1) || "Vote pro" }", answer_pro_path(answer, answer.rating), class: 'rating-link rating-link-pro', method: :post, data:{type: :json}, remote: true
      br
      = link_to "#{ answer.rating.voted?(current_user,-1) || "Vote con" }", answer_con_path(answer, answer.rating), class: 'rating-link rating-link-con', method: :post, data:{type: :json}, remote: true
    br
    - if can? :update, answer
      = link_to 'Delete answer', answer_path(answer), method: :delete, remote: true
      br
      = link_to 'Edit answer', '#', class: 'edit-answer-link', data: { answer_id: answer.id }
    div.answer_edit_hidden
      = render '/answers/answer_edit_form', answer:answer
    -if can? :mark_best, (answer.question)
      br
      = link_to 'Best answer', question_mark_best_path(answer.question, answer), method: :patch, class: 'best-answer-link', remote: true
    br
    
    div.comments_container
      ul.comments
        - unless answer.comments.empty?
          = render '/shared/comment', comments: answer.comments
      = render '/shared/comment_form', resource:answer, comment: Comment.new